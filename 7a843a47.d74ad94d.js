(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{144:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=r,p=d["".concat(i,".").concat(b)]||d[b]||f[b]||o;return n?a.a.createElement(p,c(c({ref:t},u),{},{components:n})):a.a.createElement(p,c({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},146:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},149:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},150:function(e,t,n){"use strict";var r=n(0),a=n(149);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},151:function(e,t,n){"use strict";var r=n(0),a=n.n(r),o=n(150),i=n(146),c=n(48),s=n.n(c),u=37,l=39;t.a=function(e){var t=e.block,n=e.children,c=e.defaultValue,d=e.values,f=e.groupId,b=Object(o.a)(),p=b.tabGroupChoices,m=b.setTabGroupChoices,y=Object(r.useState)(c),h=y[0],g=y[1],v=Object(r.useState)(!1),O=v[0],w=v[1];if(null!=f){var j=p[f];null!=j&&j!==h&&d.some((function(e){return e.value===j}))&&g(j)}var x=function(e){g(e),null!=f&&m(f,e)},_=[],A=function(e){e.metaKey||e.altKey||e.ctrlKey||w(!0)},k=function(){w(!1)};return Object(r.useEffect)((function(){window.addEventListener("keydown",A),window.addEventListener("mousedown",k)}),[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},d.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(i.a)("tabs__item",s.a.tabItem,{"tabs__item--active":h===t}),style:O?{}:{outline:"none"},key:t,ref:function(e){return _.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case l:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case u:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(_,e.target,e),A(e)},onFocus:function(){return x(t)},onClick:function(){x(t),w(!1)},onPointerDown:function(){return w(!1)}},n)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((function(e){return e.props.value===h}))[0]))}},152:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){return a.a.createElement("div",null,e.children)}},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return f}));var r=n(2),a=n(6),o=(n(0),n(144)),i=n(151),c=n(152),s={title:"Authentication Alerts",description:"Alerts - Authentication",sidebar_label:"Authentication"},u={unversionedId:"alerts_authentication",id:"alerts_authentication",isDocsHomePage:!1,title:"Authentication Alerts",description:"Alerts - Authentication",source:"@site/docs/alerts_authentication.md",permalink:"/docs/docs/alerts_authentication",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/alerts_authentication.md",sidebar_label:"Authentication",sidebar:"docs",previous:{title:"List of Events",permalink:"/docs/docs/alerts_events"},next:{title:"Field Boundary Management Overview",permalink:"/docs/docs/field_boundary_management_overview"}},l=[],d={rightToc:l};function f(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"It\u2019s very important to confirm that requests received on your webhook are sent from Leaf, to avoid IP spoofing attacks.\nTo this end, you should verify webhook signatures."),Object(o.b)("p",null,"Leaf generates signatures using a hash-based message authentication code (HMAC) with SHA-256, and\nthe secret specified when you created the alerts' configuration as the HMAC key.\nBe careful with deserialization of the request body when using it to verify the signature. It's recommended that you get the request body as bytes. The signed content has no line breaks, it's a string of the raw JSON with white-spaces after \u201c:\u201d and \u201c,\u201d."),Object(o.b)("p",null,"The digest is added to the X-Leaf-Signature header encoded in base 64."),Object(o.b)("p",null,"Here is an example on how to verify the request in your webhook:"),Object(o.b)(i.a,{defaultValue:"py",values:[{label:"Python",value:"py"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),"import hmac\nimport base64\n\n\n# Sign the request body received with your secret\nexpected_sig = hmac.digest(msg=request_body_bytes,\n                           key=bytes('your secret', 'utf-8'),\n                           digest='sha256')\n\n# Decode the X-Leaf-Signature header that is encoded in base 64\nrequest_sig = base64.b64decode(sig_header)\n\n# Compare both\nhmac.compare_digest(expected_sig, request_sig)\n"))),Object(o.b)(c.a,{value:"java",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'// import java.util.Base64;\n// import javax.crypto.Mac;\n// import javax.crypto.spec.SecretKeySpec;\n\nbyte[] sigHeader;  // Get from the request headers\nbyte[] rawContent;  // Get the request body\n\nString hmacAlgorithm = "HmacSHA256";\nMac mac = Mac.getInstance("HmacSHA256");\nmac.init(new SecretKeySpec("your secret".getBytes(), hmacAlgorithm));\nbyte[] signatureBytes = mac.doFinal(rawContent);\n\n// Compare sigHeader with signatureBytes\nMessageDigest.isEqual(sigHeader, signatureBytes)\n')))))}f.isMDXComponent=!0}}]);