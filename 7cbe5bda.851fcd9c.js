(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{100:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return i})),a.d(e,"metadata",(function(){return O})),a.d(e,"rightToc",(function(){return p})),a.d(e,"default",(function(){return d}));var n=a(2),l=a(6),b=(a(0),a(144)),r=a(151),c=a(152),i=(a(147),{title:"Machine File Conversion Sample Responses",description:"Machine File Conversion - Sample Responses",sidebar_label:"Sample Responses"}),O={unversionedId:"machine_file_conversion_sample_output",id:"machine_file_conversion_sample_output",isDocsHomePage:!1,title:"Machine File Conversion Sample Responses",description:"Machine File Conversion - Sample Responses",source:"@site/docs/machine_file_conversion_sample_output.md",permalink:"/docs/docs/machine_file_conversion_sample_output",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/machine_file_conversion_sample_output.md",sidebar_label:"Sample Responses",sidebar:"docs",previous:{title:"Machine File Conversion Endpoints",permalink:"/docs/docs/machine_file_conversion_endpoints"},next:{title:"Crops Table",permalink:"/docs/docs/machine_file_conversion_crops_table"}},p=[{value:"Overview",id:"overview",children:[]},{value:"Machine File Summary",id:"machine-file-summary",children:[{value:"Sample Summary response",id:"sample-summary-response",children:[]},{value:"Properties",id:"properties",children:[]}]},{value:"Standard Geojson",id:"standard-geojson",children:[{value:"Sample Response",id:"sample-response",children:[]},{value:"Properties",id:"properties-1",children:[]},{value:"Valid points",id:"valid-points",children:[]},{value:"Images",id:"images",children:[]}]}],j={rightToc:p};function d(t){var e=t.components,a=Object(l.a)(t,["components"]);return Object(b.b)("wrapper",Object(n.a)({},j,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"overview"},"Overview"),Object(b.b)("p",null,"This page shows and describes sample responses from Leaf API, along with a list\nof what properties you can expect for each type of data."),Object(b.b)("h2",{id:"machine-file-summary"},"Machine File Summary"),Object(b.b)("p",null,"Leaf returns operation file summaries in a standardized format. Summaries use\nthe point data to derive basic information about the operation and include links\nto the original files and images of an operation. Naturally, different\ntypes of operations contain different properties. For instance, an ",Object(b.b)("inlineCode",{parentName:"p"},"applied"),"\noperation will contain ",Object(b.b)("inlineCode",{parentName:"p"},"appliedRate"),", whereas a ",Object(b.b)("inlineCode",{parentName:"p"},"harvested")," operation will\ncontain ",Object(b.b)("inlineCode",{parentName:"p"},"wetMass")," and other Yield properties. The resource below shows a typical return. A list of\nall properties is available here."),Object(b.b)("p",null,"A list of the properties as well as a sample summary response for an operation\nfile is included below."),Object(b.b)("p",null,"An operation returned by Leaf can be an individual file or contain multiple\nindividual files (uploaded, merged or uploaded).\nIf the operation contains more than one individual file, another key is added to\nthe resource, the ",Object(b.b)("inlineCode",{parentName:"p"},'"sources"')," key, that is a list of individual file ids.\nIf the operation was created by an upload on the ",Object(b.b)("inlineCode",{parentName:"p"},"/batch")," endpoint, the ",Object(b.b)("inlineCode",{parentName:"p"},'"batchId"'),"\nkey will be added to the resource with the corresponding uuid."),Object(b.b)("h3",{id:"sample-summary-response"},"Sample Summary response"),Object(b.b)("p",null,"You can move through the three tabs below to see a sample of how Leaf returns\neach of the operation types."),Object(b.b)(r.a,{defaultValue:"harvested",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "planted" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "machines": ["uuid"],\n  "createdTime": "2020-10-13T12:30:49",\n  "fields": ["uuid"],\n  "originalFile": "abc.com",\n  "rawGeojson": "abc.com",\n  "standardGeojson": "abc.com",\n  "zippedPNGs": "abc.com",\n  "summary": {\n      "type": "Feature",\n      "properties": {        \n          "operationType": "planted",\n          "originalOperationType": "name of the operation as returned by the provider",\n          "elevation": {\n              "avg": 772.194895030409,\n              "min": 767.21031609,\n              "max": 775.38288827,\n              "unit": "ft"\n          },\n          "totalPlanted": {\n              "value": 3433593,\n              "unit": "seeds"\n          },\n          "varieties": [\n              {\n                  "name": "variety1",\n                  "rate": {\n                      "avg": 138845.7555144055,\n                      "min": 42265.36847555,\n                      "max": 256056.74641452,\n                      "unit": "seeds/ac",\n                      "minTarget": 139996.95107651,\n                      "maxTarget": 139996.95107651,\n                      "avgTarget": 139996.95107651004\n                  },\n                  "area": {\n                      "value": 100986.63117147879,\n                      "unit": "m2"\n                  },\n                  "totalPlanted": {\n                      "value": 3464790,\n                      "unit": "seeds"\n                  }\n              }\n          ],\n          "totalDistance": {\n              "value": 9058.425426796379,\n              "unit": "ft"\n          },\n          "seedRate": {\n              "avg": 137595.61319571827,\n              "min": 42265.36847555,\n              "max": 256056.74641452,\n              "unit": "seeds/ac"\n          },\n          "singulation": {\n              "avg": 1195.18,\n              "min": 1195.04,\n              "max": 1195.3200000000002,\n              "unit": "prcnt"\n          },\n          "downForce": {\n              "avg": 663.599999,\n              "min": 661.199999,\n              "max": 666.0,\n              "unit": "lbf"\n          },\n          "crop": [\n              "crop1"\n          ],\n          "totalArea": {\n              "value": 100986.63117147879,\n              "unit": "m2"\n          }\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n'))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for an "applied" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "machines": ["uuid"],\n  "createdTime": "2020-10-13T20:28:31",\n  "fields": ["uuid"],\n  "originalFile": "abc.com",\n  "rawGeojson": "abc.com",\n  "standardGeojson": "abc.com",\n  "zippedPNGs": "abc.com",\n  "summary": {\n      "type": "Feature",\n      "properties": {        \n          "operationType": "applied",\n          "originalOperationType": "name of the operation as returned by the provider",\n          "crop": "soybeans",\n          "totalArea": {\n              "value": 1032183,\n              "unit": "m2"\n          },\n          "startTime": "2015-11-23T20:29:01",\n          "endTime": "2015-11-23T20:31:46",\n          "elevation": {\n              "min": 220.0,\n              "max": 236.0,\n              "avg": 234.0,\n              "unit": "m"\n          },\n          "speed": {\n              "min": 0.0,\n              "max": 9.0,\n              "avg": 7.0,\n              "unit": "m/s"\n          },\n          "totalDistance": {\n              "value": 12270.32,\n              "unit": "m"\n          },\n          "machinery": [\n              {\n                  "name": "machine1", \n                  "serialNumber": "uuid",\n                  "type": "machine"\n              },\n              {\n                  "name": "implement1", \n                  "serialNumber": "uuid",\n                  "type": "implement"\n              }\n          ],      \n          "products": [{\n              "name": "28-0-0 UAN",\n              "description": "",\n              "totalApplied": {\n                  "value": 7208258,\n                  "unit": "gal"\n              },\n              "rate": {\n                  "value": 1.5,                \n                  "unit": "qt/ac"\n              },\n              "area": {\n                  "value": 511224,\n                  "unit": "m2"\n              }\n          },\n          {\n              "name": "Agrotain Plus",\n              "description": "",\n              "totalApplied": {\n                  "value": 570478,\n                  "unit": "lb"\n              },    \n              "rate": {\n                  "value": 1.2,                \n                  "unit": "qt/ac"\n              },\n              "area": {\n                  "value": 520714,\n                  "unit": "m2"\n              }\n          }]\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n'))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "harvested" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "machines": ["uuid"],\n  "createdTime": "2020-10-13T20:19:01",\n  "fields": ["uuid"],\n  "originalFile": "abc.com",\n  "rawGeojson": "abc.com",\n  "standardGeojson": "abc.com",\n  "zippedPNGs": "abc.com",\n  "summary": {\n      "type": "Feature",\n      "properties": {\n          "elevation": {\n              "avg": 784.1533510349966,\n              "min": 779.62913693,\n              "max": 787.06455821,\n              "unit": "ft"\n          },\n          "harvestMoisture": {\n              "avg": 12.888719743652945,\n              "min": 1.0,\n              "max": 15.95,\n              "unit": "percentage"\n          },\n          "wetVolume": {\n              "avg": 0.04798510370695135,\n              "min": 5.321358838842975E-11,\n              "max": 0.348360994170295,\n              "unit": "bu"\n          },\n          "wetVolumePerArea": {\n              "avg": 77.48316026098765,\n              "min": 1.595E-7,\n              "max": 1666.6666666666667,\n              "unit": "bu/ac"\n          },\n          "totalWetMass": {\n              "value": 116805.33944346363,\n              "unit": "lb"\n          },\n          "wetMassPerArea": {\n              "avg": 4648.989615659259,\n              "min": 9.57E-6,\n              "max": 100000.0,\n              "unit": "lb/ac"\n          },\n          "totalWetVolume": {\n              "value": 1946.75565739101,\n              "unit": "bu"\n          },\n          "dryMass": {\n              "avg": 0.04798510370695135,\n              "min": 5.321358838842975E-11,\n              "max": 0.348360994170295,\n              "unit": "bu"\n          },\n          "dryMassPerArea": {\n              "avg": 77.48316026098765,\n              "min": 1.595E-7,\n              "max": 1666.6666666666667,\n              "unit": "bu/ac"\n          },\n          "totalDryMass": {\n              "value": 116805.33944346363,\n              "unit": "lb"\n          },\n          "dryVolume": {\n              "avg": 0.04798510370695135,\n              "min": 5.321358838842975E-11,\n              "max": 0.348360994170295,\n              "unit": "bu"\n          },\n          "dryVolumePerArea": {\n              "avg": 77.48316026098765,\n              "min": 1.595E-7,\n              "max": 1666.6666666666667,\n              "unit": "bu/ac"\n          },\n          "totalDryVolume": {\n              "value": 116805.33944346363,\n              "unit": "lb"\n          },\n          "varieties": [\n              {\n                  "harvestMoisture": {\n                      "avg": 12.888719743652945,\n                      "min": 1.0,\n                      "max": 15.95,\n                      "unit": "percentage"\n                  },\n                  "wetMass": {\n                      "value": 116805.33944346363,\n                      "unit": "lb"\n                  },\n                  "wetMassPerArea": {\n                      "value": 1.1487903524141723,\n                      "unit": "lb/ac"\n                  },\n                  "wetVolume": {\n                      "value": 1946.75565739101,\n                      "unit": "bu"\n                  },\n                  "area": {\n                      "value": 101676.81091506233,\n                      "unit": "m2"\n                  },\n                  "name": "variety"\n              }\n          ],\n          "startTime": "2016-09-19T16:45:51.002Z",\n          "operationType": "harvested",\n          "originalOperationType": "name of the operation as returned by the provider",\n          "endTime": "2016-09-19T19:50:25.991Z",\n          "totalDistance": {\n              "value": 36481.33613821037,\n              "unit": "ft"\n          },\n          "wetMass": {\n              "avg": 2.8791062224170814,\n              "min": 3.192815303305785E-9,\n              "max": 20.9016596502177,\n              "unit": "lb"\n          },\n          "crop": [\n              "crop1"\n          ],\n          "totalArea": {\n              "value": 101676.81091506233,\n              "unit": "m2"\n          }\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n'))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("p",null,'This is an example of a summary for a "tillage" operation'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n "id": "uuid",\n "provider": "provider name",\n "leafUserId": "uuid",\n "apiOwnerUsername": "email",\n "sourceFiles": [],\n "status": "processed",\n "origin": "provider or Leaf",\n "machines": ["uuid"],\n "createdTime": "2020-10-13T20:19:01",\n "fields": ["uuid"],\n "originalFile": "abc.com",\n "rawGeojson": "abc.com",\n "standardGeojson": "abc.com",\n "zippedPNGs": "abc.com",\n "summary":{\n   "type": "Feature",\n   "properties": {\n     "totalDistance": {\n       "value": 32485.04528135762,\n       "unit": "ft"\n     },\n     "speed": {\n       "avg": 9.89216842105263,\n       "min": 1.0079999999999998,\n       "max": 13.6152,\n       "unit": "km/hr"\n     },\n     "startTime": "2012-11-07T20:20:59.000+00:00",\n     "endTime": "2012-11-07T21:48:38.274+00:00",\n     "totalArea": {\n       "value": 120718.37844703135,\n       "unit": "m2"\n     },\n     "elevation": {\n       "avg": 240.42123251182193,\n       "min": 238.19576293945346,\n       "max": 252.3117629394535,\n       "unit": "m"\n     },\n     "crop": [],\n     "operationType": "tillage",\n     "originalOperationType": "name of the operation as returned by the provider",\n     "tillageDepthTarget": {\n       "avg": 5.999999999999999,\n       "min": 5.999999999999999,\n       "max": 5.999999999999999,\n       "unit": "in"\n     },\n     "machinery": \n     [\n       {\n         "name": "8295",\n         "type": "machine"\n       },\n       {\n         "name": "16 row",\n         "type": "implement"\n       }\n     ]\n   },\n   "geometry": {\n         "type": "MultiPolygon",\n         "coordinates": [[[\n             [-89.80434894561768,40.47791686563837],\n             [-89.80756759643555,40.4757623387113],\n             [-89.80746030807495,40.47302011353734],\n             [-89.80475664138794,40.47070219301965],\n             [-89.80080842971802,40.47068586935202],\n             [-89.79797601699828,40.472709973879255],\n             [-89.7978687286377,40.47569704893722],\n             [-89.80117321014404,40.47808008455794],\n             [-89.80434894561768,40.47791686563837]\n         ]]]\n     }\n }\n}\n')))),Object(b.b)("h3",{id:"properties"},"Properties"),Object(b.b)("p",null,'Select the tab you want to see: "planted", "applied", "harvested", or "tillage".'),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"varieties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalPlanted"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int (number of seeds)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"downForce"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"singulation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests")),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalApplied"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests")),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalDryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalDryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"varieties"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests",Object(b.b)("br",{parentName:"p"}),"\n","$ = Not available when the crop is ",Object(b.b)("em",{parentName:"p"},"sugarcane"))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "tillage"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationDescription"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,"  ","*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests"))),Object(b.b)("h2",{id:"standard-geojson"},"Standard Geojson"),Object(b.b)("p",null,"When the data is present in the original file, Leaf standardizes names and units\nto create the standardGeojson."),Object(b.b)("p",null,"Below we list all the properties in the standardGeojson."),Object(b.b)("h3",{id:"sample-response"},"Sample Response"),Object(b.b)("p",null,'Each operation file returns with a "standardgeojson" URL that allows you to download a full point dataset from the operation in a standardized geojson format. Below is an example of the format of each point in these files.'),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "planted",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "variety": "string",\n      "area": "float",\n      "seedRate": "int",\n      "seedRateTarget": "int",\n      "seedDepth": "float",\n      "downForce": "float",\n      "singulation": "float"\n  }\n}\n'))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "applied",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "area": "float",\n      "appliedRate": "float",\n      "appliedRateTarget": "float",      \n      "products": [\n      {\n          "name": "AMS",\n          "rate": {\n              "value": 15\n          }\n      },\n      {\n          "name": "Counter",\n          "rate": {\n              "value": 20\n          }\n      },\n      {\n          "name": "Water",\n          "rate": {\n              "value": 9.727\n              }\n      }\n      ]\n  }\n}\n'))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n      "type": "Point",\n      "coordinates": [-74.83762110788625, 28.686604864693564]\n  },\n  "properties": {\n      "distance": "float",\n      "heading": "float",\n      "speed": "float",\n      "elevation": "float",\n      "harvestMoisture": "float",\n      "equipmentWidth": "float",\n      "recordingStatus": "string",\n      "machinery": ["string"],\n      "sectionId" : "int",\n      "timestamp": "string",\n      "operationType": "harvested",\n      "originalOperationType": "name of the operation as returned by the provider",\n      "crop": "string",\n      "variety": "string",\n      "area": "float",\n      "wetMass": "float",\n      "wetVolume": "float",\n      "wetMassPerArea": "float",\n      "wetVolumePerArea": "float",\n      "dryMass": "float",\n      "dryVolume": "float",\n      "dryMassPerArea": "float",\n      "dryVolumePerArea": "float"\n  }\n}\n'))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n "type": "Feature",\n "geometry": {\n     "type": "Point",\n     "coordinates": [-93.14995443980574, 41.67055240890354]\n },\n "properties": {\n     "speed": "float",\n     "heading": "float",\n     "distance": "float",\n     "tillageDepthTarget": "float",\n     "recordingStatus": "string",\n     "timestamp": "string",\n     "operationType": "tillage",\n     "originalOperationType": "name of the operation as returned by the provider",\n     "equipmentWidth": "float",\n     "elevation": "float",\n     "area": "float"\n }\n}\n')))),Object(b.b)("h3",{id:"properties-1"},"Properties"),Object(b.b)(r.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"},{label:"Tillage",value:"tillage"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The rate of seeds planted at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being planted")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target rate of seeds to be planted at the point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cm"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The depth at which seeds were planted at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"productIndex"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Index of the applied product")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"downForce"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lbf"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The weight detected by the down force sensor on each row that has one")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"singulation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The performance of each meter on the planter")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system"))))),Object(b.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The amount of product being applied at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of dicts"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tank mix including products and ratio")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target amount of product to be applied at the point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of machine and implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system"))))),Object(b.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point x,y")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being harvested")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*$"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point divided by area")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cropFlow"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tonne/h"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Massic flow of the harvested crop")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"proteinPercentage"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Amount of protein content for the harvested product")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"samplingInterval"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Delta time from the previous recorded feature")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system"))))),Object(b.b)(c.a,{value:"tillage",mdxType:"TabItem"},Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "tillage"')),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"originalOperationType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthTarget"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target depth")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The actual depth")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of machineInfo objects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of machine and implement")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"xOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Vertical offset from the instrumentation sensor and the monitor GPS system")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yOffset"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Horizontal offset from the instrumentation sensor and the monitor GPS system")))))),Object(b.b)("p",null,"*"," = Always in response",Object(b.b)("br",{parentName:"p"}),"\n","*","*"," = Usually in response but not required to pass tests",Object(b.b)("br",{parentName:"p"}),"\n","$ = Not available when the crop is ",Object(b.b)("em",{parentName:"p"},"sugarcane")),Object(b.b)("p",null,"Despite the example units, Leaf's API will push through every unit, if the processed file contains the ",Object(b.b)("inlineCode",{parentName:"p"},"required")," (marked with *) properties."),Object(b.b)("h3",{id:"valid-points"},"Valid points"),Object(b.b)("p",null,"The points in the standardGeoJSON are considered valid if all the following rules are true:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"property"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"rule"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tillageDepthActual"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"> 0.0")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'= "On"')))),Object(b.b)("p",null,"If necessary Leaf API can automatically clean these points up using the configuration ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/docs/configurations_overview"}),Object(b.b)("inlineCode",{parentName:"a"},"cleanupStandardGeojson")),"."),Object(b.b)("h3",{id:"images"},"Images"),Object(b.b)("p",null,"Also, Leaf displays all the numerical properties across all operation types via a png file. Here's a sample response from a Leaf harvested file."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n        "property": "area",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "wetMass",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "wetVolume",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "distance",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "wetVolumePerArea",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "equipmentWidth",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "wetMassPerArea",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "sectionId",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "elevation",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "harvestMoisture",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "heading",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "dryMass",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "dryMassPerArea",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "dryVolume",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    },\n    {\n        "property": "dryVolumePerArea",\n        "ramp": {\n            "0%": [200, 0, 0],\n            "35%": [255, 40, 0],\n            "45%": [255, 150, 0],\n            "55%": [255, 240, 0],\n            "65%": [0, 230, 0],\n            "75%": [0, 190, 0],\n            "100%": [0, 130, 0],\n            "nv": [0, 0, 0, 0 ]\n        },\n        "url": "https://png-files-bucket-dev.s3.us-east-1.amazonaws.com/uuid.png"\n    }\n]\n')))}d.isMDXComponent=!0},144:function(t,e,a){"use strict";a.d(e,"a",(function(){return j})),a.d(e,"b",(function(){return o}));var n=a(0),l=a.n(n);function b(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function c(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){b(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},b=Object.keys(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var O=l.a.createContext({}),p=function(t){var e=l.a.useContext(O),a=e;return t&&(a="function"==typeof t?t(e):c(c({},e),t)),a},j=function(t){var e=p(t.components);return l.a.createElement(O.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return l.a.createElement(l.a.Fragment,{},e)}},m=l.a.forwardRef((function(t,e){var a=t.components,n=t.mdxType,b=t.originalType,r=t.parentName,O=i(t,["components","mdxType","originalType","parentName"]),j=p(a),m=n,o=j["".concat(r,".").concat(m)]||j[m]||d[m]||b;return a?l.a.createElement(o,c(c({ref:e},O),{},{components:a})):l.a.createElement(o,c({ref:e},O))}));function o(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var b=a.length,r=new Array(b);r[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:n,r[1]=c;for(var O=2;O<b;O++)r[O]=a[O];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},145:function(t,e,a){"use strict";var n=a(0),l=a(20);e.a=function(){var t=Object(n.useContext)(l.a);if(null===t)throw new Error("Docusaurus context not provided");return t}},146:function(t,e,a){"use strict";function n(t){var e,a,l="";if("string"==typeof t||"number"==typeof t)l+=t;else if("object"==typeof t)if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(a=n(t[e]))&&(l&&(l+=" "),l+=a);else for(e in t)t[e]&&(l&&(l+=" "),l+=e);return l}e.a=function(){for(var t,e,a=0,l="";a<arguments.length;)(t=arguments[a++])&&(e=n(t))&&(l&&(l+=" "),l+=e);return l}},147:function(t,e,a){"use strict";a.d(e,"b",(function(){return b})),a.d(e,"a",(function(){return r}));var n=a(145),l=a(148);function b(){var t=Object(n.a)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,a=void 0===e?"/":e,b=t.url;return{withBaseUrl:function(t,e){return function(t,e,a,n){var b=void 0===n?{}:n,r=b.forcePrependBaseUrl,c=void 0!==r&&r,i=b.absolute,O=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(l.b)(a))return a;if(c)return e+a;var p=!a.startsWith(e)?e+a.replace(/^\//,""):a;return O?t+p:p}(b,a,t,e)}}}function r(t,e){return void 0===e&&(e={}),(0,b().withBaseUrl)(t,e)}},148:function(t,e,a){"use strict";function n(t){return!0===/^(\w*:|\/\/)/.test(t)}function l(t){return void 0!==t&&!n(t)}a.d(e,"b",(function(){return n})),a.d(e,"a",(function(){return l}))},149:function(t,e,a){"use strict";var n=a(0),l=Object(n.createContext)(void 0);e.a=l},150:function(t,e,a){"use strict";var n=a(0),l=a(149);e.a=function(){var t=Object(n.useContext)(l.a);if(null==t)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return t}},151:function(t,e,a){"use strict";var n=a(0),l=a.n(n),b=a(150),r=a(146),c=a(48),i=a.n(c),O=37,p=39;e.a=function(t){var e=t.block,a=t.children,c=t.defaultValue,j=t.values,d=t.groupId,m=Object(b.a)(),o=m.tabGroupChoices,u=m.setTabGroupChoices,s=Object(n.useState)(c),g=s[0],N=s[1],y=Object(n.useState)(!1),f=y[0],h=y[1];if(null!=d){var v=o[d];null!=v&&v!==g&&j.some((function(t){return t.value===v}))&&N(v)}var w=function(t){N(t),null!=d&&u(d,t)},T=[],x=function(t){t.metaKey||t.altKey||t.ctrlKey||h(!0)},P=function(){h(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",P)}),[]),l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":e})},j.map((function(t){var e=t.value,a=t.label;return l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===e,className:Object(r.a)("tabs__item",i.a.tabItem,{"tabs__item--active":g===e}),style:f?{}:{outline:"none"},key:e,ref:function(t){return T.push(t)},onKeyDown:function(t){!function(t,e,a){switch(a.keyCode){case p:!function(t,e){var a=t.indexOf(e)+1;t[a]?t[a].focus():t[0].focus()}(t,e);break;case O:!function(t,e){var a=t.indexOf(e)-1;t[a]?t[a].focus():t[t.length-1].focus()}(t,e)}}(T,t.target,t),x(t)},onFocus:function(){return w(e)},onClick:function(){w(e),h(!1)},onPointerDown:function(){return h(!1)}},a)}))),l.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(t){return t.props.value===g}))[0]))}},152:function(t,e,a){"use strict";var n=a(0),l=a.n(n);e.a=function(t){return l.a.createElement("div",null,t.children)}}}]);