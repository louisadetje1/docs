(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),i=(n(0),n(144)),s=n(151),l=n(152),o=(n(147),{title:"Weather Endpoints",description:"Weather - Endpoints",sidebar_label:"Endpoints"}),c={unversionedId:"weather_endpoints",id:"weather_endpoints",isDocsHomePage:!1,title:"Weather Endpoints",description:"Weather - Endpoints",source:"@site/docs/weather_endpoints.md",permalink:"/docs/docs/weather_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/weather_endpoints.md",sidebar_label:"Endpoints"},u=[{value:"About",id:"about",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"Get Daily Forecast",id:"get-daily-forecast",children:[]},{value:"Get Hourly Forecast",id:"get-hourly-forecast",children:[]},{value:"Get Daily Historical",id:"get-daily-historical",children:[]},{value:"Get Hourly Historical",id:"get-hourly-historical",children:[]}]}],b={rightToc:u};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"about"},"About"),Object(i.b)("p",null,"Here we list all the available endpoints from Weather API. For easily calling them,\nwe recommend using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-API-Postman-Collection"}),"Leaf's Postman collection"),"."),Object(i.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/weather/api\n")),Object(i.b)("p",null,"This service has the following endpoints available:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"#get-daily-forecast"}),"Get Daily Forecast")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/weather/forecast/field/{fieldId}/daily"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"#get-hourly-forecast"}),"Get Hourly Forecast")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/weather/forecast/field/{fieldId}/hourly"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"#get-daily-historical"}),"Get Daily Historical")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/weather/historical/field/{fieldId}/daily"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"#get-hourly-historical"}),"Get Hourly Historical")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/weather/historical/field/{fieldId}/hourly"))))),Object(i.b)("h2",{id:"endpoints"},"Endpoints"),Object(i.b)("h3",{id:"get-daily-forecast"},"Get Daily Forecast"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/weather/forecast/field/{fieldId}/daily")),Object(i.b)("p",null,"Get daily forecast by leaf user and field. If dates are not set on the endpoint, the response will return\nforecast data for the next seven days."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"endTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"startTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")))),Object(i.b)("h4",{id:"request-examples"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/daily'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(l.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/daily'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(l.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/daily'\n")))),Object(i.b)("h4",{id:"response"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "properties": {\n    "maxTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xbaC"\n    },\n    "sunrise": {\n      "values": [\n        "time": "str",\n        "value": "str"\n      ],\n      "unit": "iso8601"\n    },\n    "snowfallSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "cm"\n    },\n    "precipitationSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "maxWindspeed": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "evapotranspiration": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "processedTime": "str",\n    "rainSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "maxWindgusts": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "meanTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "minTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "sunset": {\n      "values": [\n        "time": "str",\n        "value": "str"\n      ],\n      "unit": "iso8601"\n    },\n    "windDirection": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0"\n    }\n  },\n  "geometry": {\n    "type": "str",\n    "coordinates": [\n      0,\n      0\n    ]\n  }\n}\n')),Object(i.b)("h3",{id:"get-hourly-forecast"},"Get Hourly Forecast"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/weather/forecast/field/{fieldId}/hourly")),Object(i.b)("p",null,"Get hourly forecast by leaf user and field. If dates are not set on the endpoint, the response will return\nforecast data for the next seven days."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"endTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"startTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")))),Object(i.b)("h4",{id:"request-examples-1"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/hourly'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(l.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/hourly'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(l.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/forecast/field/{fieldId}/hourly'\n")))),Object(i.b)("h4",{id:"response-1"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "properties": {\n    "rain": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "dewpoint": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "windgusts": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "snowfall": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "cm"\n    },\n    "evapotranspiration": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "shortwaveRadiation": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "W/m\xb2"\n    },\n    "processedTime": "str",\n    "cloudcover": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "%"\n    },\n    "precipitation": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "relativeHumidity": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "%"\n    },\n    "temperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "windspeed": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "windDirection": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    }\n  },\n  "geometry": {\n    "type": "str",\n    "coordinates": [\n      0,\n      0\n    ]\n  }\n}\n')),Object(i.b)("h3",{id:"get-daily-historical"},"Get Daily Historical"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/weather/historical/field/{fieldId}/daily")),Object(i.b)("p",null,"Get daily historical by leaf user and field. If the dates are not defined in the endpoint, the response will\nreturn data from the last seven days."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"endTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"startTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")))),Object(i.b)("h4",{id:"request-examples-2"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/daily'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(l.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/daily'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(l.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/daily'\n")))),Object(i.b)("h4",{id:"response-2"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "properties": {\n    "maxTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xbaC"\n    },\n    "sunrise": {\n      "values": [\n        "time": "str",\n        "value": "str"\n      ],\n      "unit": "iso8601"\n    },\n    "snowfallSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "cm"\n    },\n    "precipitationSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "maxWindspeed": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "evapotranspiration": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "processedTime": "str",\n    "rainSum": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "maxWindgusts": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "meanTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "minTemperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "sunset": {\n      "values": [\n        "time": "str",\n        "value": "str"\n      ],\n      "unit": "iso8601"\n    },\n    "windDirection": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0"\n    }\n  },\n  "geometry": {\n    "type": "str",\n    "coordinates": [\n      0,\n      0\n    ]\n  }\n}\n')),Object(i.b)("h3",{id:"get-hourly-historical"},"Get Hourly Historical"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/weather/historical/field/{fieldId}/hourly")),Object(i.b)("p",null,"Get hourly historical by leaf user and field. If the dates are not defined in the endpoint, the response will\nreturn data from the last seven days."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"endTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"startTime"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")))),Object(i.b)("h4",{id:"request-examples-3"},"Request examples"),Object(i.b)(s.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/hourly'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(l.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/hourly'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(l.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/weather/api/users/{leafUserId}/weather/historical/field/{fieldId}/hourly'\n")))),Object(i.b)("h4",{id:"response-3"},"Response"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "properties": {\n    "rain": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "dewpoint": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "windgusts": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "snowfall": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "cm"\n    },\n    "evapotranspiration": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "shortwaveRadiation": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "W/m\xb2"\n    },\n    "processedTime": "str",\n    "cloudcover": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "%"\n    },\n    "precipitation": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "mm"\n    },\n    "relativeHumidity": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "%"\n    },\n    "temperature": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "\xb0C"\n    },\n    "windspeed": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    },\n    "windDirection": {\n      "values": [\n        "time": "str",\n        "value": int\n      ],\n      "unit": "km/h"\n    }\n  },\n  "geometry": {\n    "type": "str",\n    "coordinates": [\n      0,\n      0\n    ]\n  }\n}\n')))}d.isMDXComponent=!0},144:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),b=u(n),p=a,m=b["".concat(s,".").concat(p)]||b[p]||d[p]||i;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},145:function(e,t,n){"use strict";var a=n(0),r=n(20);t.a=function(){var e=Object(a.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},146:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},147:function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return s}));var a=n(145),r=n(148);function i(){var e=Object(a.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,s=i.forcePrependBaseUrl,l=void 0!==s&&s,o=i.absolute,c=void 0!==o&&o;if(!n)return n;if(n.startsWith("#"))return n;if(Object(r.b)(n))return n;if(l)return t+n;var u=!n.startsWith(t)?t+n.replace(/^\//,""):n;return c?e+u:u}(i,n,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},148:function(e,t,n){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return r}))},149:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},150:function(e,t,n){"use strict";var a=n(0),r=n(149);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},151:function(e,t,n){"use strict";var a=n(0),r=n.n(a),i=n(150),s=n(146),l=n(48),o=n.n(l),c=37,u=39;t.a=function(e){var t=e.block,n=e.children,l=e.defaultValue,b=e.values,d=e.groupId,p=Object(i.a)(),m=p.tabGroupChoices,O=p.setTabGroupChoices,h=Object(a.useState)(l),j=h[0],f=h[1],v=Object(a.useState)(!1),y=v[0],g=v[1];if(null!=d){var N=m[d];null!=N&&N!==j&&b.some((function(e){return e.value===N}))&&f(N)}var w=function(e){f(e),null!=d&&O(d,e)},T=[],I=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},E=function(){g(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",I),window.addEventListener("mousedown",E)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":t})},b.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(s.a)("tabs__item",o.a.tabItem,{"tabs__item--active":j===t}),style:y?{}:{outline:"none"},key:t,ref:function(e){return T.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(T,e.target,e),I(e)},onFocus:function(){return w(t)},onClick:function(){w(t),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===j}))[0]))}},152:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);